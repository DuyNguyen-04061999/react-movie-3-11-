{"version":3,"file":"static/js/943.f4a328b5.chunk.js","mappings":"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","sources":["components/movie/MovieCard.js","components/movie/MovieList.js","components/pages/HomePage.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { imgUrl } from \"apiConfig/config\";\r\nimport Button from \"components/button/Button\";\r\n\r\nconst MovieCard = ({ movie }) => {\r\n  const { poster_path, title, release_date, vote_average, id } = movie;\r\n  const navigate = useNavigate();\r\n  const handleClickMovieDetail = () => {\r\n    navigate(`/movies/${id}`);\r\n  };\r\n  return (\r\n    <div className=\"movie-card rounded-lg p-3 bg-slate-800 text-white h-full flex flex-col\">\r\n      <div className=\"cursor-pointer\" onClick={handleClickMovieDetail}>\r\n        <img\r\n          onError={(event) => (event.target.style.display = \"none\")}\r\n          src={`${imgUrl()}${poster_path}`}\r\n          alt=\"\"\r\n          className=\"w-full h-[250px] object-cover rounded-lg object-top\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"flex flex-col flex-grown\">\r\n        <h3 className=\"text-white text-xl font-bold mb-3 movie-title mt-2 flex\">\r\n          {title}\r\n        </h3>\r\n        <div className=\"flex items-center justify-between text-sm opacity-80 mb-10\">\r\n          <span>{new Date(release_date)?.getFullYear()}</span>\r\n          <div className=\"flex items-center justify-center gap-x-1\">\r\n            <span>{vote_average?.toFixed(1)}</span>\r\n            <svg\r\n              width=\"20\"\r\n              height=\"20\"\r\n              viewBox=\"0 0 46 43\"\r\n              fill=\"none\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d=\"M46 16.4415H28.4009L23 0L17.5991 16.4415H0L14.3955 26.5585L8.78929 43L23 32.8106L37.2107 43L31.5942 26.5585L46 16.4415Z\"\r\n                fill=\"#FF9500\"\r\n              />\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <Button\r\n          onClick={() => navigate(`/movies/${id}`)}\r\n          type=\"button\"\r\n          className=\"w-full\"\r\n        >\r\n          Watch Now\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Pagination } from \"swiper\";\r\nimport \"swiper/css/pagination\";\r\nimport MovieCard from \"./MovieCard\";\r\nimport useSWR from \"swr\";\r\nimport { api_key, fetcher, tmdbAPI } from \"apiConfig/config\";\r\n\r\nconst MovieList = ({ type, movieID = null, similar = false }) => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [url, setUrl] = useState(null);\r\n\r\n  const { data } = useSWR(url, fetcher);\r\n  useEffect(() => {\r\n    setMovies(data?.results);\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    if (similar && movieID) {\r\n      setUrl(tmdbAPI.getMovieInfo(movieID, similar));\r\n    }\r\n  }, [movieID, similar]);\r\n\r\n  useEffect(() => {\r\n    if (type) {\r\n      setUrl(tmdbAPI.getMovieListType(type));\r\n    }\r\n  }, [type]);\r\n\r\n  return (\r\n    <div className=\"movie-list\">\r\n      <Swiper\r\n        modules={[Pagination]}\r\n        spaceBetween={40}\r\n        slidesPerView={4}\r\n        grabCursor={true}\r\n        pagination={{\r\n          clickable: true,\r\n          renderBullet: function (index, className) {\r\n            return `<span class=${className}></span>`;\r\n          },\r\n        }}\r\n      >\r\n        {movies?.map((movie) => (\r\n          <SwiperSlide key={movie.id}>\r\n            <MovieCard movie={movie} api_key={api_key} />\r\n          </SwiperSlide>\r\n        ))}\r\n      </Swiper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\nimport MovieList from \"components/movie/MovieList\";\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <>\r\n      <section className=\"movies-layout page-container pb-10\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Now Playing\r\n        </h2>\r\n\r\n        <MovieList type=\"now_playing\"/>\r\n      </section>\r\n      <section className=\"movies-layout page-container pb-20\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Top trending\r\n        </h2>\r\n\r\n        <MovieList type=\"popular\"/>\r\n      </section>\r\n      <section className=\"movies-layout page-container pb-20\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Top rated\r\n        </h2>\r\n\r\n        <MovieList type=\"top_rated\"/>\r\n      </section>\r\n      <section className=\"movies-layout page-container pb-20\">\r\n        <h2 className=\"capitalize text-white mb-10 text-3xl font-bold\">\r\n          Up Coming\r\n        </h2>\r\n\r\n        <MovieList type=\"upcoming\"/>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n"],"names":["movie","poster_path","title","release_date","vote_average","id","navigate","useNavigate","className","onClick","onError","event","target","style","display","src","imgUrl","alt","Date","getFullYear","toFixed","width","height","viewBox","fill","xmlns","fillRule","clipRule","d","type","movieID","similar","useState","movies","setMovies","url","setUrl","data","useSWR","fetcher","useEffect","results","tmdbAPI","modules","Pagination","spaceBetween","slidesPerView","grabCursor","pagination","clickable","renderBullet","index","map","MovieCard","api_key"],"sourceRoot":""}